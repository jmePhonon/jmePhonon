name: Build jmePhonon
on:
  push:
  pull_request:
  release:
    types: [published]
  
jobs:
  
  # Build the natives
  BuildNatives:
    strategy:
      fail-fast: true
      matrix:
        osName: [linux,windows,mac] 
        jdk: [8.x.x]
        include:
          - osName: linux
            os: ubuntu-latest
          - osName: windows
            os: windows-latest
          - osName: mac
            os: macos-latest
              
    name: Build natives for ${{ matrix.osName }} on ${{ matrix.os }}    
    runs-on: ${{ matrix.os }}    
    steps:    
    
      - name: Clone the repo
        uses: actions/checkout@v2     
        with:
          fetch-depth: 1
           
      - name: Prepare java environment
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}
          architecture: x64
          
      - name: Prepare Windows
        if:  matrix.osName  == 'windows'
        uses: crazy-max/ghaction-chocolatey@v1.4.0
        with:
          args: install findutils curl wget 
     
 
      - name: Build ${{ matrix.osName }} natives on ${{ matrix.os }}
        shell: bash
        env: 
          OS_NAME: ${{matrix.osName}}
        run: |
          echo "Build on $OS_NAME"
          export TRASH=notrash 
          export NO_CACHE=1 
          export GRADLE_USER_HOME=$PWD/build.cache 
          if [ "$OS_NAME" = "mac" ];
          then
            echo "Build for mac"
            export OS_OSX=1 
            brew install coreutils findutils
            export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
            export PATH="/usr/local/opt/findutils/libexec/gnubin:$PATH"
          elif [ "$OS_NAME" = "windows" ]; 
          then
            echo "Build for windows"
            export OS_WINDOWS=1 
          else
            echo "Build for linux"
            export OS_LINUX=1
          fi
          ./build.sh prepareWorkspace
          ./build.sh downloadResources
          gradle build
          if [ "$OS_NAME" = "windows" ]; 
          then
          ./build.sh updateJNIHeaders "D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\com.github.jMonkeyEngine.jmonkeyengine\\jme3-lwjgl\\025b27c96d295e02c1471580980c7f4429be44b5\\7049321b47a6abf7ee134b0e931e20dfcd559e50\\jme3-lwjgl-025b27c96d295e02c1471580980c7f4429be44b5.jar;D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\com.github.jMonkeyEngine.jmonkeyengine\\jme3-desktop\\025b27c96d295e02c1471580980c7f4429be44b5\\8a728cdcf6afc7bcae26bda7d220d5409a4857f8\\jme3-desktop-025b27c96d295e02c1471580980c7f4429be44b5.jar;D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\com.github.jMonkeyEngine.jmonkeyengine\\jme3-jogg\\025b27c96d295e02c1471580980c7f4429be44b5\\d7a50b5b0007683b1175d68eb20849c638746f5d\\jme3-jogg-025b27c96d295e02c1471580980c7f4429be44b5.jar;D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\com.github.jMonkeyEngine.jmonkeyengine\\jme3-core\\025b27c96d295e02c1471580980c7f4429be44b5\\e0940f0d18ba4cbce9f02dfc1a5fdada845aee6f\\jme3-core-025b27c96d295e02c1471580980c7f4429be44b5.jar;D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\org.lwjgl.lwjgl\\lwjgl\\2.9.3\\3df168ac74e4a8c96562cdff24ad352e255bf89c\\lwjgl-2.9.3.jar;D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\de.jarnbjo\\j-ogg-all\\1.0.0\\c74a3afb9ec805502baf9d0f0f15d7adaf84088b\\j-ogg-all-1.0.0.jar;D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\org.lwjgl.lwjgl\\lwjgl-platform\\2.9.3\\fbc2afb3e288578e9942578decb6291a490549a0\\lwjgl-platform-2.9.3-natives-windows.jar;D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\org.lwjgl.lwjgl\\lwjgl-platform\\2.9.3\\b1eafe80093381c56415731e1d64279e6140bcd0\\lwjgl-platform-2.9.3-natives-linux.jar;D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\org.lwjgl.lwjgl\\lwjgl-platform\\2.9.3\\6686cf6ddaa20b4290aa6599a09bc0d17369be05\\lwjgl-platform-2.9.3-natives-osx.jar;D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\net.java.jinput\\jinput\\2.0.5\\39c7796b469a600f72380316f6b1f11db6c2c7c4\\jinput-2.0.5.jar;D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\net.java.jutils\\jutils\\1.0.0\\e12fe1fda814bd348c1579329c86943d2cd3c6a6\\jutils-1.0.0.jar;D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\net.java.jinput\\jinput-platform\\2.0.5\\7ff832a6eb9ab6a767f1ade2b548092d0fa64795\\jinput-platform-2.0.5-natives-linux.jar;D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\net.java.jinput\\jinput-platform\\2.0.5\\385ee093e01f587f30ee1c8a2ee7d408fd732e16\\jinput-platform-2.0.5-natives-windows.jar;D:\\a\\jmePhonon\\jmePhonon\\build.cache\\caches\\modules-2\\files-2.1\\net.java.jinput\\jinput-platform\\2.0.5\\53f9c919f34d2ca9de8c51fc4e1e8282029a9232\\jinput-platform-2.0.5-natives-osx.jar;D:\\a\\jmePhonon\\jmePhonon\\build\\classes\\java\\main" "D:\\a\\jmePhonon\\jmePhonon\\build\\classes\\java\\main" "src/main/natives/include"
          fi
          gradle updateJNIHeaders  buildNatives
                     
      - name: Upload native artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.osName }}-natives
          path: tmp/natives/
    
  BuildLibrary:
    needs: [BuildNatives]
    name: Build library
    runs-on: ubuntu-latest
    steps:
      - name: Clone the repo
        uses: actions/checkout@v2     
        with:
          fetch-depth: 1
      
      - name: Prepare java environment
        uses: actions/setup-java@v1
        with:
          java-version: 8.x.x
          architecture: x64  
    
      - name: Download Linux native artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux-natives
          path: tmp/natives/
           
      - name: Download Mac native artifacts
        uses: actions/download-artifact@v2
        with:
          name: mac-natives
          path: tmp/natives/ 
          
      - name: Download Windows native artifacts
        uses: actions/download-artifact@v2
        with:
          name: windows-natives
          path: tmp/natives/   
          
      - name: Build Library
        run: |
          mkdir -p dist
          gradle downloadResources updateJNIHeaders build buildStandaloneTests install -Dmaven.repo.local="dist" -Pin_version="-SNAPSHOT"
          
      - name: Upload dist artifact
        uses: actions/upload-artifact@v2
        with:
          name: maven
          path: dist
          
