name: Build jmePhonon
on:
  push:
  pull_request:
  release:
    types: [published]
  
jobs:
  
  # Build the natives
  BuildNatives:
    strategy:
      fail-fast: true
      matrix:
        osName: [linux,windows,mac] 
        jdk: [8.x.x]
        include:
          - osName: linux
            os: ubuntu-latest
          - osName: windows
            os: windows-latest
          - osName: mac
            os: macos-latest
              
    name: Build natives for ${{ matrix.osName }} on ${{ matrix.os }}    
    runs-on: ${{ matrix.os }}    
    steps:    
    
      - name: Clone the repo
        uses: actions/checkout@v2     
        with:
          fetch-depth: 1
           
      - name: Prepare java environment
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}
          architecture: x64
          
      - name: Prepare Windows
        if:  matrix.osName  == 'windows'
        uses: crazy-max/ghaction-chocolatey@v1.4.0
        with:
          args: install findutils curl wget 
     
 
      - name: Build ${{ matrix.osName }} natives on ${{ matrix.os }}
        shell: bash
        env: 
          OS:  ${{matrix.osName}}
        run: |
          export TRASH=notrash 
          export NO_CACHE=1 
          export GRADLE_USER_HOME=$PWD/build.cache 
          ./build.sh prepareWorkspace
          ./build.sh downloadResources
          if [ "$OS" = "mac" ];
          then
            export OS_OSX=1 
            brew install coreutils findutils
          elif [ "$OS" = "windows" ]; 
          then
            export OS_WINDOWS=1 
          else
            export OS_LINUX=1
          fi
          gradle --info updateJNIHeaders buildNatives
                     
      - name: Upload native artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.osName }}-natives
          path: tmp/natives/
    
  BuildLibrary:
    needs: [BuildNatives]
    name: Build library
    runs-on: ubuntu-latest
    steps:
      - name: Clone the repo
        uses: actions/checkout@v2     
        with:
          fetch-depth: 1
      
      - name: Prepare java environment
        uses: actions/setup-java@v1
        with:
          java-version: 8.x.x
          architecture: x64  
    
      - name: Download Linux native artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux-natives
          path: tmp/natives/
           
      - name: Download Mac native artifacts
        uses: actions/download-artifact@v2
        with:
          name: mac-natives
          path: tmp/natives/ 
          
      - name: Download Windows native artifacts
        uses: actions/download-artifact@v2
        with:
          name: windows-natives
          path: tmp/natives/   
          
      - name: Build Library
        run: |
          mkdir -p dist
          gradle downloadResources updateJNIHeaders build buildStandaloneTests install -Dmaven.repo.local="dist" -Pin_version="-SNAPSHOT"
          
      - name: Upload dist artifact
        uses: actions/upload-artifact@v2
        with:
          name: maven
          path: dist
          
