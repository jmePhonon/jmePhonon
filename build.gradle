apply plugin : 'java' 


def jmerepo='com.github.jmonkeyengine.jMonkeyEngine'
def jmeversion='v3.2.0-stable'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    
}

dependencies {
    compile jmerepo + ':jme3-core:' + jmeversion
    compile jmerepo + ':jme3-desktop:' + jmeversion
    compile jmerepo + ':jme3-lwjgl:' + jmeversion
    compile jmerepo + ':jme3-jogg:' + jmeversion
    testCompile 'junit:junit:4.11'

}

sourceSets{
main {   
    resources {
        srcDir 'build/natives/'
    }
}


test {   
    java{
        srcDir "src/test/unit"
    }
    resources {
        srcDir 'build/natives/'
    }
}

}

task getSteamAudio(type :Exec){
    commandLine 'bash','prepare.sh',"getSteamAudio"
}

task buildNativeTests(type :Exec){
    commandLine 'bash','prepare.sh',"buildNativeTests"
}
buildNativeTests.dependsOn(getSteamAudio)

task updateJNIHeaders(type:Exec) {
    def javapth=project.sourceSets.main.java.outputDir
    def classpath = configurations.compile.join(":")+ ":"+javapth;
    commandLine 'bash','prepare.sh',"updateJNIHeaders",classpath,javapth,"src/main/natives/include"
}
updateJNIHeaders.dependsOn(classes)

task deepClean(type:Exec){
    commandLine 'bash','prepare.sh',"deepClean"
}
deepClean.dependsOn(clean);


task buildNatives(type :Exec){
    commandLine 'bash','prepare.sh',"buildNatives"
}
buildNatives.dependsOn(getSteamAudio)

task genWorkspace(type:Exec){
    commandLine 'bash','prepare.sh','getSteamAudio' 
}
genWorkspace.finalizedBy(buildNatives)

build.dependsOn(buildNatives)
